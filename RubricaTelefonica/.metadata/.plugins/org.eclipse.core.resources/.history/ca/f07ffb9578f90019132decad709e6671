package com.practice.rubrica.repository;

import java.util.List;

import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Predicate;
import javax.persistence.criteria.Root;

import com.practice.rubrica.entities.Contatti;

public class ContattiRepImpl extends AbstractRep<Contatti> implements ContattiRep {

	@Override
	public List<Contatti> selTutti() {
		
		return super.selTutti();
	}

	@Override
	public List<Contatti> selByInstructions(String instructions) {

		List<Contatti> retVal;
		
		CriteriaBuilder cb = entityManager.getCriteriaBuilder();
		CriteriaQuery<Contatti> queryDefinition = cb.createQuery(Contatti.class);
		
		Root<Contatti> recordset = queryDefinition.from(Contatti.class);
		
		queryDefinition.select(recordset);
		
		Predicate predicateOnNum_Tel = cb.like(recordset.<String>get("num_tel"), instructions);
		Predicate predicateOnNome = cb.like(recordset.<String>get("nome"), instructions);
		Predicate predicateOnCognome = cb.like(recordset.<String>get("cognome"), instructions);
		Predicate p = cb.or(predicateOnNum_Tel, predicateOnNome, predicateOnCognome);
		
		queryDefinition.where(p);
		
		retVal = entityManager.createQuery(queryDefinition).getResultList();
		
		return retVal;
	}

	@Override
	public void inserisci(Contatti contatto) {
		
		super.inserisci(contatto);
	}

}
